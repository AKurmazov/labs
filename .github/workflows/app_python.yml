name: App Python CI
on:
  push:
    paths:
      - app_python/**
      - .github/workflows/app_python.yml

env:
  WORKDIR: ./app_python

jobs:
  snyk:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check vulnerabilities in Python
        uses: snyk/actions/python-3.8@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=${{ env.WORKDIR }}/poetry.lock

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ${{ env.WORKDIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ hashFiles('$WORKDIR/poetry.lock') }}-${{ hashFiles('$WORKDIR/pyproject.toml') }}

      - name: Install dependencies
        run: |
          apt-get update && apt-get -y install make
          python -m pip install --no-cache-dir poetry==1.2.0
          python -m poetry install

      - name: Lint
        run: make lint

      - name: Test
        run: make test

  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push (server)
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.WORKDIR }}
          file: ${{ env.WORKDIR }}/docker/server/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/server:latest
