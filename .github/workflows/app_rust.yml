name: App Rust CI
on:
  push:
    paths:
      - app_rust/**
      - .github/workflows/app_rust.yml

env:
  WORKDIR: ./app_rust

jobs:
#  snyk:
#    runs-on: ubuntu-latest
#    timeout-minutes: 10
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Check vulnerabilities in Python
#        uses: snyk/actions/python-3.8@master
#        env:
#          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#        with:
#          args: --file=${{ env.WORKDIR }}/poetry.lock

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ${{ env.WORKDIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy
          override: true

      - name: Cache
        uses: actions/cache@v2
        with:
          path: ./target/debug
          key: ${{ hashFiles('$WORKDIR/cargo.lock') }}-${{ hashFiles('$WORKDIR/cargo.toml') }}

      - name: Check
        run: cargo check

      - name: Lint
        run: make lint

      - name: Test
        run: make test

  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push (server)
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.WORKDIR }}
          file: ${{ env.WORKDIR }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/app_rust-server:latest
